# !! YAML doesnâ€™t allow literal tab characters for indentation !!

# ========== Canonical configuration for the services ==========

# The order of precedence (highest to lowest) is as follows:

# - Set using docker compose run -e in the CLI
# - Substituted from your shell
# - Set using the environment attribute in the Compose file
# - Use of the --env-file argument in the CLI
# - Use of the env_file attribute in the Compose file
# - Set using an .env file placed at base of your project directory
# - Set in a container image in the ENV directive.
# - Having any ARG or ENV setting in a Dockerfile evaluates only if there is no Docker Compose entry for environment, env_file or run --env.
services:
  web: &web
    build:
      context: .
      dockerfile: ./compose/local/web/Dockerfile
    image: ${PROJECT_IMAGE_PREFIX}_${ENVIRONMENT}_web:${SEM_VER_TAG}
    container_name: ${PROJECT_IMAGE_PREFIX}_${ENVIRONMENT}_web
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8000:8000
    command: /start

  db:
    build:
      context: .
      dockerfile: ./compose/production/db/Dockerfile
    image: ${PROJECT_IMAGE_PREFIX}_production_db:${SEM_VER_TAG}
    container_name: ${PROJECT_IMAGE_PREFIX}_${ENVIRONMENT}_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 30s
      retries: 3

  redis:
    image: redis:6
    container_name: ${PROJECT_IMAGE_PREFIX}_${ENVIRONMENT}_redis

  celeryworker:
    <<: *web
    build:
      context: .
      dockerfile: ./compose/local/web/Dockerfile
    image: ${PROJECT_IMAGE_PREFIX}_${ENVIRONMENT}_celeryworker:${SEM_VER_TAG}
    container_name: ${PROJECT_IMAGE_PREFIX}_${ENVIRONMENT}_celeryworker
    depends_on:
      - redis
      - db
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *web
    build:
      context: .
      dockerfile: ./compose/local/web/Dockerfile
    image: ${PROJECT_IMAGE_PREFIX}_${ENVIRONMENT}_celerybeat:${SEM_VER_TAG}
    container_name: ${PROJECT_IMAGE_PREFIX}_${ENVIRONMENT}_celerybeat
    depends_on:
      - redis
      - db
    ports: []
    command: /start-celerybeat

  flower:
    <<: *web
    build:
      context: .
      dockerfile: ./compose/local/web/Dockerfile
    image: ${PROJECT_IMAGE_PREFIX}_${ENVIRONMENT}_flower:${SEM_VER_TAG}
    container_name: ${PROJECT_IMAGE_PREFIX}_${ENVIRONMENT}_flower
    ports:
      - '5555:5555'  # http://
    command: /start-flower
